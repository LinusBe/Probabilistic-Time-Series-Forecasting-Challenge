# ==============================================
# File: /configs/energy/lstm.yml
# Beschreibung: LSTM-Modell-Konfiguration für "energy" Dataset
# ==============================================

dataset: energy              # Name des Datensatzes
model: lstm                  # Unser neuer Modelltyp
quantiles: [0.025, 0.25, 0.5, 0.75, 0.975]

optuna_search_space:
  param_space:
    hidden_size: [16, 256]        # [min, max]
    num_layers: [1, 3]            # [min, max]
    dropout: [0.0, 0.5]           # [min, max]
    learning_rate: [0.00001, 0.01]  # [min, max] (log=True)
    epochs: [10, 130]             # [min, max]
    batch_size: [16, 200]         # [min, max]
    weight_decay: [0.00001, 0.001] # [min, max]
    optimizer: [adam, sgd, AdamW, Adadelta]
    bias: [true, false]
    seq_length: [2, 168] 
    gradient_clipping:
      enabled: [true, false]
      clip_norm: [1.0, 10.0]
      norm_type: 2.0
      method: [norm]

versions:
  v1.0.0:
    start_date: '2022-01-01 00:00:00'
    train_size: 0.9                   # Anteil der Daten fürs Training
    test_size: 0.1                     # Anteil für Test
    eval_set:                      # Gibt an, ob ein Validierungsset im traing der Hauptmodelle verwendet werden soll. 
      use: false
      size: 0.1
    early_stopping:               # only possible with eval !!!!
      rounds: 10000000000
    # Imputationsmethode (exemplarisch)
    imputation_method:
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward

    # Trainingsmodus: simple_split oder rolling_cv
    training_mode: simple_split

    # CV-Einstellungen (falls rolling_cv genutzt wird)
    cv_settings:
      window_type: expanding
      test_window: 1W
      optuna_folds: 1

    optuna:
      use_optuna: false      # Ob Hyperparameter-Tuning mit Optuna erfolgen soll
      n_trials: 15
      n_splits: 2
      direction: minimize
      metric: pinball_loss
      quantile: 0.5

    feature_selection:
      top_n: 10
      run_selection: false

    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize
        time:
          enabled: false
          method: standardize
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize

      target:
        lags: [24, 168]

      time_features:
        - hour
        - weekday
        - is_weekend
        - month
      fourier_terms: false
      exogenous:
        base_features: []
        transformations:
          rolling:
            windows: []
            stats: []
            features: []
          diff:
            windows: []
            features: []
      advanced:
        holiday:
          enabled: false
          proximity: false
          country: DE
        interactions: []
        rolling_moments:
          windows: []
          moments: []
          features: []

    # LSTM-spezifische Default-Parameter
    params:
      hidden_size: 128
      num_layers: 2
      bias: true
      dropout: 0.2
      learning_rate: 0.001
      epochs: 50
      batch_size: 64
      seq_length: 168
      weight_decay: 0.0001
      optimizer: AdamW
      gradient_clipping:
        enabled: false
        norm_type: 2.0           # optional, default=2.0 (L2-Norm)
        clip_norm: 2.0877458667118156
    forecast_approach: iterative
    forecast_horizon: 1



  v1.0.1:
    start_date: '2022-01-01 00:00:00'
    train_size: 0.9                   # Anteil der Daten fürs Training
    test_size: 0.1                     # Anteil für Test
    eval_set:                      # Gibt an, ob ein Validierungsset im traing der Hauptmodelle verwendet werden soll. 
      use: false
      size: 0.1
    early_stopping:               # only possible with eval !!!!
      rounds: 1000
    # Imputationsmethode (exemplarisch)
    imputation_method:
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward

    # Trainingsmodus: simple_split oder rolling_cv
    training_mode: rolling_cv

    # CV-Einstellungen (falls rolling_cv genutzt wird)
    cv_settings:
      window_type: expanding
      test_window: 1W
      optuna_folds: 1

    optuna:
      use_optuna: false      # Ob Hyperparameter-Tuning mit Optuna erfolgen soll
      n_trials: 15
      n_splits: 2
      direction: minimize
      metric: pinball_loss
      quantile: 0.5

    feature_selection:
      top_n: 10
      run_selection: false

    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize
        time:
          enabled: false
          method: standardize
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize

      target:
        lags: [24, 168]

      time_features:
        - hour
        - weekday
        - is_weekend
        - month
      fourier_terms: false
      exogenous:
        base_features: []
        transformations:
          rolling:
            windows: []
            stats: []
            features: []
          diff:
            windows: []
            features: []
      advanced:
        holiday:
          enabled: false
          proximity: false
          country: DE
        interactions: []
        rolling_moments:
          windows: []
          moments: []
          features: []

    # LSTM-spezifische Default-Parameter
    params:
      hidden_size: 128
      num_layers: 2
      bias: true
      dropout: 0.2
      learning_rate: 0.001
      epochs: 50
      batch_size: 64
      seq_length: 168
      weight_decay: 0.0001
      optimizer: AdamW
      gradient_clipping:
        enabled: false
        norm_type: 2.0           # optional, default=2.0 (L2-Norm)
        clip_norm: 2.0877458667118156
    forecast_approach: iterative
    forecast_horizon: 1


  v1.0.2:
    start_date: '2022-01-01 00:00:00'
    train_size: 0.9                   # Anteil der Daten fürs Training
    test_size: 0.1                     # Anteil für Test
    eval_set:                      # Gibt an, ob ein Validierungsset im traing der Hauptmodelle verwendet werden soll. 
      use: true
      size: 0.1
    early_stopping:               # only possible with eval !!!!
      rounds: 5
    # Imputationsmethode (exemplarisch)
    imputation_method:
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward

    # Trainingsmodus: simple_split oder rolling_cv
    training_mode: simple_split

    # CV-Einstellungen (falls rolling_cv genutzt wird)
    cv_settings:
      window_type: expanding
      test_window: 1W
      optuna_folds: 1

    optuna:
      use_optuna: true      # Ob Hyperparameter-Tuning mit Optuna erfolgen soll
      n_trials: 20
      n_splits: 2
      direction: minimize
      metric: pinball_loss
      quantile: 0.5

    feature_selection:
      top_n: 10
      run_selection: false

    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize
        time:
          enabled: false
          method: standardize
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize

      target:
        lags: [24, 168]

      time_features:
        - hour
        - weekday
        - is_weekend
        - month
      fourier_terms: false
      exogenous:
        base_features: []
        transformations:
          rolling:
            windows: []
            stats: []
            features: []
          diff:
            windows: []
            features: []
      advanced:
        holiday:
          enabled: false
          proximity: false
          country: DE
        interactions: []
        rolling_moments:
          windows: []
          moments: []
          features: []

    # LSTM-spezifische Default-Parameter
    params:
      hidden_size: 228
      num_layers: 2
      bias: false
      dropout: 0.37433780679411666
      learning_rate: 0.00014991889813027978
      epochs: 81
      batch_size: 118
      seq_length: 168
      weight_decay: 0.000473402854186186
      optimizer: adam
      gradient_clipping:
        enabled: false
        norm_type:               # optional, default=2.0 (L2-Norm)
        clip_norm:
    forecast_approach: iterative
    forecast_horizon: 1

  v1.0.3:
    start_date: '2022-01-01 00:00:00'
    train_size: 0.9                   # Anteil der Daten fürs Training
    test_size: 0.1                     # Anteil für Test
    eval_set:                      # Gibt an, ob ein Validierungsset im traing der Hauptmodelle verwendet werden soll. 
      use: True
      size: 0.1
    early_stopping:               # only possible with eval !!!!
      rounds: 3
    # Imputationsmethode (exemplarisch)
    imputation_method:
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward

    # Trainingsmodus: simple_split oder rolling_cv
    training_mode: rolling_cv

    # CV-Einstellungen (falls rolling_cv genutzt wird)
    cv_settings:
      window_type: expanding
      test_window: 1W
      optuna_folds: 1

    optuna:
      use_optuna: False      # Ob Hyperparameter-Tuning mit Optuna erfolgen soll
      n_trials: 15
      n_splits: 2
      direction: minimize
      metric: pinball_loss
      quantile: 0.5

    feature_selection:
      top_n: 10
      run_selection: false

    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize
        time:
          enabled: false
          method: standardize
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize

      target:
        lags: [24, 168]

      time_features:
        - hour
        - weekday
        - is_weekend
        - month
      fourier_terms: false
      exogenous:
        base_features: []
        transformations:
          rolling:
            windows: []
            stats: []
            features: []
          diff:
            windows: []
            features: []
      advanced:
        holiday:
          enabled: false
          proximity: false
          country: DE
        interactions: []
        rolling_moments:
          windows: []
          moments: []
          features: []

    # LSTM-spezifische Default-Parameter
    params:
      hidden_size: 228
      num_layers: 2
      bias: false
      dropout: 0.37433780679411666
      learning_rate: 0.00014991889813027978
      epochs: 81
      batch_size: 118
      seq_length: 168
      weight_decay: 0.000473402854186186
      optimizer: adam
      gradient_clipping:
        enabled: false
        norm_type:               # optional, default=2.0 (L2-Norm)
        clip_norm:
    forecast_approach: iterative
    forecast_horizon: 1



  v1.1.0:
    start_date: '2022-01-01 00:00:00'
    train_size: 0.9                   # Anteil der Daten fürs Training
    test_size: 0.1                     # Anteil für Test
    eval_set:                      # Gibt an, ob ein Validierungsset im traing der Hauptmodelle verwendet werden soll. 
      use: true
      size: 0.1
    early_stopping:               # only possible with eval !!!!
      rounds: 5
    # Imputationsmethode (exemplarisch)
    imputation_method:
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward

    # Trainingsmodus: simple_split oder rolling_cv
    training_mode: simple_split

    # CV-Einstellungen (falls rolling_cv genutzt wird)
    cv_settings:
      window_type: expanding
      test_window: 1W
      optuna_folds: 1

    optuna:
      use_optuna: false         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 25
      n_splits: 2
      direction: minimize
      metric: pinball_loss
      quantile: 0.5

    feature_selection:
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize
        time:
          enabled: false
          method: standardize
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [24, 168]
      time_features:
        - hour
        - weekday
        - is_weekend
        - month
        - summer_winter_time
      fourier_terms: false
      exogenous:
        base_features:
          - temperature_2m
          - rain
          # - surface_pressure
          - cloud_cover
          - wind_speed_10m
          # - wind_speed_100m
          - sunshine_duration
          # - direct_radiation

        transformations:
          rolling:
            windows: []
            stats: []
            features: []
          diff:
            windows: []
            features: []
      advanced:
        holiday:
          enabled: true
          proximity: true
          country: DE
        interactions: []
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      hidden_size: 228
      num_layers: 2
      bias: false
      dropout: 0.37433780679411666
      learning_rate: 0.00014991889813027978
      epochs: 81
      batch_size: 118
      seq_length: 168
      weight_decay: 0.000473402854186186
      optimizer: adam
      gradient_clipping:
        enabled: false
        norm_type:               # optional, default=2.0 (L2-Norm)
        clip_norm:
    forecast_approach: iterative
    forecast_horizon: 1



  v1.1.1:
    # Datenaufbereitung und Splitting
    start_date: '2022-01-01 00:00:00'
    train_size: 0.9                   # Anteil der Daten fürs Training
    test_size: 0.1                     # Anteil für Test
    eval_set:                      # Gibt an, ob ein Validierungsset im traing der Hauptmodelle verwendet werden soll. 
      use: true
      size: 0.1
    early_stopping:               # only possible with eval !!!!
      rounds: 5
    # Imputationsmethode (exemplarisch)
    imputation_method:
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward
    training_mode: rolling_cv          # Trainingsmodus;rolling_cv oder simple_split
    cv_settings:
      window_type: expanding
      test_window: 1W
      optuna_folds: 1

    optuna:
      use_optuna: false         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 25
      n_splits: 2
      direction: minimize
      metric: pinball_loss
      quantile: 0.5

    feature_selection:
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize
        time:
          enabled: false
          method: standardize
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [24, 168]
      time_features:
        - hour
        - weekday
        - is_weekend
        - month
        - summer_winter_time
      fourier_terms: false
      exogenous:
        base_features:
          - temperature_2m
          - rain
          # - surface_pressure
          - cloud_cover
          - wind_speed_10m
          # - wind_speed_100m
          - sunshine_duration
          # - direct_radiation

        transformations:
          rolling:
            windows: []
            stats: []
            features: []
          diff:
            windows: []
            features: []
      advanced:
        holiday:
          enabled: true
          proximity: true
          country: DE
        interactions: []
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      hidden_size: 228
      num_layers: 2
      bias: false
      dropout: 0.37433780679411666
      learning_rate: 0.00014991889813027978
      epochs: 81
      batch_size: 118
      seq_length: 168
      weight_decay: 0.000473402854186186
      optimizer: adam
      gradient_clipping:
        enabled: false
        norm_type:               # optional, default=2.0 (L2-Norm)
        clip_norm:
    forecast_approach: iterative
    forecast_horizon: 1


  v1.1.2:
    # Datenaufbereitung und Splitting
    start_date: '2022-01-01 00:00:00'
    train_size: 0.9                   # Anteil der Daten fürs Training
    test_size: 0.1                     # Anteil für Test
    eval_set:                      # Gibt an, ob ein Validierungsset im traing der Hauptmodelle verwendet werden soll. 
      use: true
      size: 0.1
    early_stopping:               # only possible with eval !!!!
      rounds: 5
    # Imputationsmethode (exemplarisch)
    imputation_method:
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward
    training_mode: rolling_cv          # Trainingsmodus;rolling_cv oder simple_split
    cv_settings:
      window_type: expanding
      test_window: 1W
      optuna_folds: 1

    optuna:
      use_optuna: false         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 25
      n_splits: 2
      direction: minimize
      metric: pinball_loss
      quantile: 0.5

    feature_selection:
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize
        time:
          enabled: false
          method: standardize
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [24, 168]
      time_features:
        - hour
        - weekday
        - is_weekend
        - month
        - summer_winter_time
      fourier_terms: false
      exogenous:
        base_features:
          - temperature_2m
          - rain
          - surface_pressure
          - cloud_cover
          - wind_speed_10m
          - wind_speed_100m
          - sunshine_duration
          - direct_radiation
          - dew_point_2m
          - apparent_temperature
          - sulphur_dioxide

        transformations:
          rolling:
            windows: []
            stats: []
            features: []
          diff:
            windows: []
            features: []
      advanced:
        holiday:
          enabled: true
          proximity: true
          country: DE
        interactions: []
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      hidden_size: 228
      num_layers: 2
      bias: false
      dropout: 0.37433780679411666
      learning_rate: 0.00014991889813027978
      epochs: 81
      batch_size: 118
      seq_length: 168
      weight_decay: 0.000473402854186186
      optimizer: adam
      gradient_clipping:
        enabled: false
        norm_type:               # optional, default=2.0 (L2-Norm)
        clip_norm:
    forecast_approach: iterative
    forecast_horizon: 1



  v1.1.3:
    # Datenaufbereitung und Splitting
    start_date: '2022-01-01 00:00:00'
    train_size: 0.9                   # Anteil der Daten fürs Training
    test_size: 0.1                     # Anteil für Test
    eval_set:                      # Gibt an, ob ein Validierungsset im traing der Hauptmodelle verwendet werden soll. 
      use: true
      size: 0.1
    early_stopping:               # only possible with eval !!!!
      rounds: 5
    # Imputationsmethode (exemplarisch)
    imputation_method:
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward
    training_mode: simple_split          # Trainingsmodus;rolling_cv oder simple_split
    cv_settings:
      window_type: expanding
      test_window: 1W
      optuna_folds: 1

    optuna:
      use_optuna: false         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 25
      n_splits: 2
      direction: minimize
      metric: pinball_loss
      quantile: 0.5

    feature_selection:
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize
        time:
          enabled: false
          method: standardize
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [24, 168]
      time_features:
        - hour
        - weekday
        - is_weekend
        - month
        - summer_winter_time
      fourier_terms: true
      exogenous:
        base_features:
          - temperature_2m
          - rain
          - surface_pressure
          - cloud_cover
          - wind_speed_10m
          - wind_speed_100m
          - sunshine_duration
          - direct_radiation
          - dew_point_2m
          - apparent_temperature
          - sulphur_dioxide

        transformations:
          rolling:
            windows: [24, 168]
            stats: [mean, std]
            features: [temperature_2m, wind_speed_10m]
          diff:
            windows: []
            features: []
      advanced:
        holiday:
          enabled: true
          proximity: true
          country: DE
        interactions:
          - [temperature_2m, rain]
          - [sunshine_duration, wind_speed_10m]
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      hidden_size: 228
      num_layers: 2
      bias: false
      dropout: 0.37433780679411666
      learning_rate: 0.00014991889813027978
      epochs: 81
      batch_size: 118
      seq_length: 168
      weight_decay: 0.000473402854186186
      optimizer: adam
      gradient_clipping:
        enabled: false
        norm_type:               # optional, default=2.0 (L2-Norm)
        clip_norm:
    forecast_approach: iterative
    forecast_horizon: 1


  v1.1.4:
    # Datenaufbereitung und Splitting
    start_date: '2022-01-01 00:00:00'
    train_size: 0.9                   # Anteil der Daten fürs Training
    test_size: 0.1                     # Anteil für Test
    eval_set:                      # Gibt an, ob ein Validierungsset im traing der Hauptmodelle verwendet werden soll. 
      use: true
      size: 0.1
    early_stopping:               # only possible with eval !!!!
      rounds: 5
    # Imputationsmethode (exemplarisch)
    imputation_method:
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward
    training_mode: simple_split          # Trainingsmodus;rolling_cv oder simple_split
    cv_settings:
      window_type: expanding
      test_window: 1W
      optuna_folds: 1

    optuna:
      use_optuna: true         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 25
      n_splits: 2
      direction: minimize
      metric: pinball_loss
      quantile: 0.5

    feature_selection:
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize
        time:
          enabled: false
          method: standardize
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [24, 168]
      time_features:
        - hour
        - weekday
        - is_weekend
        - month
        - summer_winter_time
      fourier_terms: true
      exogenous:
        base_features:
          - temperature_2m
          - rain
          - surface_pressure
          - cloud_cover
          - wind_speed_10m
          - wind_speed_100m
          - sunshine_duration
          - direct_radiation
          - dew_point_2m
          - apparent_temperature
          - sulphur_dioxide

        transformations:
          rolling:
            windows: [24, 168]
            stats: [mean, std]
            features: [temperature_2m, wind_speed_10m]
          diff:
            windows: []
            features: []
      advanced:
        holiday:
          enabled: true
          proximity: true
          country: DE
        interactions:
          - [temperature_2m, rain]
          - [sunshine_duration, wind_speed_10m]
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      hidden_size: 157
      num_layers: 2
      bias: false
      dropout: 0.07326128473497878
      learning_rate: 0.00037834142577274
      epochs: 52
      batch_size: 39
      seq_length: 168
      weight_decay: 0.0001167040698413586
      optimizer: adam
      gradient_clipping:
        enabled: false
        norm_type:               # optional, default=2.0 (L2-Norm)
        clip_norm:
    forecast_approach: iterative
    forecast_horizon: 1


  v1.1.5:
    # Datenaufbereitung und Splitting
    start_date: '2022-01-01 00:00:00'
    train_size: 0.9                   # Anteil der Daten fürs Training
    test_size: 0.1                     # Anteil für Test
    eval_set:                      # Gibt an, ob ein Validierungsset im traing der Hauptmodelle verwendet werden soll. 
      use: true
      size: 0.1
    early_stopping:               # only possible with eval !!!!
      rounds: 5
    # Imputationsmethode (exemplarisch)
    imputation_method:
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward
    training_mode: rolling_cv          # Trainingsmodus;rolling_cv oder simple_split
    cv_settings:
      window_type: expanding
      test_window: 1W
      optuna_folds: 1

    optuna:
      use_optuna: true         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 25
      n_splits: 2
      direction: minimize
      metric: pinball_loss
      quantile: 0.5

    feature_selection:
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize
        time:
          enabled: false
          method: standardize
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [24, 168]
      time_features:
        - hour
        - weekday
        - is_weekend
        - month
        - summer_winter_time
      fourier_terms: true
      exogenous:
        base_features:
          - temperature_2m
          - rain
          - surface_pressure
          - cloud_cover
          - wind_speed_10m
          - wind_speed_100m
          - sunshine_duration
          - direct_radiation
          - dew_point_2m
          - apparent_temperature
          - sulphur_dioxide

        transformations:
          rolling:
            windows: [24, 168]
            stats: [mean, std]
            features: [temperature_2m, wind_speed_10m]
          diff:
            windows: [24, 168]
            features: [surface_pressure, temperature_2m]
      advanced:
        holiday:
          enabled: true
          proximity: true
          country: DE
        interactions:
          - [temperature_2m, rain]
          - [sunshine_duration, wind_speed_10m]
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      hidden_size: 99
      num_layers: 2
      bias: false
      dropout: 0.002737813424276793
      learning_rate: 0.00016106734612740173
      epochs: 123
      batch_size: 17
      seq_length: 168
      weight_decay: 1.9146890618820042e-05
      optimizer: AdamW
      gradient_clipping:
        enabled: false
        norm_type:               # optional, default=2.0 (L2-Norm)
        clip_norm:
    forecast_approach: iterative
    forecast_horizon: 1




  v1.1.6:
    # Datenaufbereitung und Splitting
    start_date: '2022-01-01 00:00:00'
    train_size: 0.9                   # Anteil der Daten fürs Training
    test_size: 0.1                     # Anteil für Test
    eval_set:                      # Gibt an, ob ein Validierungsset im traing der Hauptmodelle verwendet werden soll. 
      use: true
      size: 0.1
    early_stopping:               # only possible with eval !!!!
      rounds: 5
    # Imputationsmethode (exemplarisch)
    imputation_method:
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward
    training_mode: rolling_cv          # Trainingsmodus;rolling_cv oder simple_split
    cv_settings:
      window_type: expanding
      test_window: 1W
      optuna_folds: 1

    optuna:
      use_optuna: true         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 10
      n_splits: 2
      direction: minimize
      metric: pinball_loss
      quantile: 0.5

    feature_selection:
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize
        time:
          enabled: false
          method: standardize
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [24, 168]
      time_features:
        - hour
        - weekday
        - is_weekend
        - month
        - summer_winter_time
      fourier_terms: true
      exogenous:
        base_features:
          - temperature_2m
          - rain
          - surface_pressure
          - cloud_cover
          - wind_speed_10m
          - wind_speed_100m
          - sunshine_duration
          - direct_radiation
          - dew_point_2m
          - apparent_temperature
          - sulphur_dioxide

        transformations:
          rolling:
            windows: [24, 168]
            stats: [mean, std]
            features: [temperature_2m, wind_speed_10m]
          diff:
            windows: [24, 168]
            features: [surface_pressure, temperature_2m]
      advanced:
        holiday:
          enabled: true
          proximity: true
          country: DE
        interactions:
          - [temperature_2m, rain]
          - [sunshine_duration, wind_speed_10m]
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      hidden_size: 47
      num_layers: 1
      bias: false
      dropout: 0.02600832225468469
      learning_rate: 0.00012834771280805223
      epochs: 76
      batch_size: 66
      seq_length: 336
      weight_decay: 8.845354574971477e-05
      optimizer: adam
      gradient_clipping:
        enabled: false
        norm_type:               # optional, default=2.0 (L2-Norm)
        clip_norm:
    forecast_approach: iterative
    forecast_horizon: 1




  v1.1.7:
    # Datenaufbereitung und Splitting
    start_date: '2022-01-01 00:00:00'
    train_size: 0.9                   # Anteil der Daten fürs Training
    test_size: 0.1                     # Anteil für Test
    eval_set:                      # Gibt an, ob ein Validierungsset im traing der Hauptmodelle verwendet werden soll. 
      use: true
      size: 0.1
    early_stopping:               # only possible with eval !!!!
      rounds: 5
    # Imputationsmethode (exemplarisch)
    imputation_method:
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward
    training_mode: simple_split          # Trainingsmodus;rolling_cv oder simple_split
    cv_settings:
      window_type: expanding
      test_window: 1W
      optuna_folds: 1

    optuna:
      use_optuna: true         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 10
      n_splits: 2
      direction: minimize
      metric: pinball_loss
      quantile: 0.5

    feature_selection:
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize
        time:
          enabled: false
          method: standardize
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [24, 168]
      time_features:
        - hour
        - weekday
        - is_weekend
        - month
        - summer_winter_time
      fourier_terms: true
      exogenous:
        base_features:
          - temperature_2m
          - rain
          - surface_pressure
          - cloud_cover
          - wind_speed_10m
          - wind_speed_100m
          - sunshine_duration
          - direct_radiation
          - dew_point_2m
          - apparent_temperature
          - sulphur_dioxide

        transformations:
          rolling:
            windows: [24, 168]
            stats: [mean, std]
            features: [temperature_2m, wind_speed_10m]
          diff:
            windows: [24, 168]
            features: [surface_pressure, temperature_2m]
      advanced:
        holiday:
          enabled: true
          proximity: true
          country: DE
        interactions:
          - [temperature_2m, rain]
          - [sunshine_duration, wind_speed_10m]
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      hidden_size: 112
      num_layers: 1
      bias: false
      dropout: 0.3817503926843537
      learning_rate: 0.00015087392907028906
      epochs: 77
      batch_size: 117
      seq_length: 336
      weight_decay: 5.8179396353612575e-05
      optimizer: adam
      gradient_clipping:
        enabled: false
        norm_type:               # optional, default=2.0 (L2-Norm)
        clip_norm:
    forecast_approach: iterative
    forecast_horizon: 1





  v1.2.0:
    start_date: '2022-01-01 00:00:00'
    train_size: 0.9                   # Anteil der Daten fürs Training
    test_size: 0.1                     # Anteil für Test
    eval_set:                      # Gibt an, ob ein Validierungsset im traing der Hauptmodelle verwendet werden soll. 
      use: true
      size: 0.1
    early_stopping:               # only possible with eval !!!!
      rounds: 5
    # Imputationsmethode (exemplarisch)
    imputation_method:
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward

    # Trainingsmodus: simple_split oder rolling_cv
    training_mode: simple_split

    # CV-Einstellungen (falls rolling_cv genutzt wird)
    cv_settings:
      window_type: expanding
      test_window: 1W
      optuna_folds: 1

    optuna:
      use_optuna: true         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 10
      n_splits: 2
      direction: minimize
      metric: pinball_loss
      quantile: 0.5

    feature_selection:
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize
        time:
          enabled: false
          method: standardize
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [24, 48, 72, 120, 168]
      time_features:
        - weekday
      fourier_terms: false
      exogenous:
        # !! WICHTIG: Liste hier ALLE Roh-Features auf, die für Transformationen benötigt werden !!
        base_features: []

        transformations:
          rolling:
            windows: [168]
            stats: [std]
            features: [relative_humidity_2m]
          diff:
            windows: [24, 168]
            features: [wind_speed_10m, apparent_temperature, surface_pressure]
      advanced:
        holiday:
          enabled: true
          proximity: true
          country: DE
        interactions: []             # Leer gelassen, da keine spezifischen Interaktionen angefordert wurden
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      hidden_size: 183
      num_layers: 1
      bias: false
      dropout: 0.4892713371519735
      learning_rate: 0.0015420925101716316
      epochs: 21
      batch_size: 174
      seq_length: 168
      weight_decay: 2.3011394070663908e-05
      optimizer: adam
      gradient_clipping:
        enabled: false
        norm_type:               # optional, default=2.0 (L2-Norm)
        clip_norm:
    forecast_approach: iterative
    forecast_horizon: 1






  v1.2.1:
    start_date: '2022-01-01 00:00:00'
    train_size: 0.9                   # Anteil der Daten fürs Training
    test_size: 0.1                     # Anteil für Test
    eval_set:                      # Gibt an, ob ein Validierungsset im traing der Hauptmodelle verwendet werden soll. 
      use: true
      size: 0.1
    early_stopping:               # only possible with eval !!!!
      rounds: 5
    # Imputationsmethode (exemplarisch)
    imputation_method:
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward

    # Trainingsmodus: simple_split oder rolling_cv
    training_mode: simple_split

    # CV-Einstellungen (falls rolling_cv genutzt wird)
    cv_settings:
      window_type: expanding
      test_window: 1W
      optuna_folds: 1

    optuna:
      use_optuna: true         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 10
      n_splits: 2
      direction: minimize
      metric: pinball_loss
      quantile: 0.5

    feature_selection:
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize
        time:
          enabled: false
          method: standardize
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [24, 48, 72, 96, 120, 148, 168]
      time_features:
        - hour
        - weekday
        - is_weekend
      fourier_terms: true
      exogenous:
        base_features: []
        transformations:
          rolling:
            windows: [24, 168]
            stats: [std, max]
            features: [relative_humidity_2m, wind_speed_10m]
          diff:
            windows: [12, 24, 168]
            features: [wind_speed_10m, apparent_temperature, surface_pressure, relative_humidity_2m,
              temperature_2m]
      advanced:
        holiday:
          enabled: true
          proximity: true
          country: DE
        interactions: []             # Leer gelassen, da keine spezifischen Interaktionen angefordert wurden
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      hidden_size: 40
      num_layers: 1
      bias: false
      dropout: 0.41627876493809135
      learning_rate: 0.000903416729687935
      epochs: 90
      batch_size: 78
      seq_length: 168
      weight_decay: 0.0005474792700468061
      optimizer: AdamW
      gradient_clipping:
        enabled: true
        norm_type: 2.0           # optional, default=2.0 (L2-Norm)
        clip_norm: 1.8321372759241086
    forecast_approach: iterative
    forecast_horizon: 1




  v1.2.2:
    start_date: '2022-01-01 00:00:00'
    train_size: 0.9                   # Anteil der Daten fürs Training
    test_size: 0.1                     # Anteil für Test
    eval_set:                      # Gibt an, ob ein Validierungsset im traing der Hauptmodelle verwendet werden soll. 
      use: true
      size: 0.1
    early_stopping:               # only possible with eval !!!!
      rounds: 5
    # Imputationsmethode (exemplarisch)
    imputation_method:
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward

    # Trainingsmodus: simple_split oder rolling_cv
    training_mode: simple_split

    # CV-Einstellungen (falls rolling_cv genutzt wird)
    cv_settings:
      window_type: expanding
      test_window: 1W
      optuna_folds: 1

    optuna:
      use_optuna: true         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 10
      n_splits: 2
      direction: minimize
      metric: pinball_loss
      quantile: 0.5

    feature_selection:
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize
        time:
          enabled: false
          method: standardize
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [24, 168]
      time_features:
        - hour
        - weekday
        - is_weekend
        - month
      fourier_terms: true
      exogenous:
        base_features:
          - temperature_2m
          - rain
          - cloud_cover
          - wind_speed_10m
          - sunshine_duration


        transformations:
          rolling:
            windows: [24]
            stats: [mean]
            features: [temperature_2m]
          diff:
            windows: [24]
            features: [surface_pressure]
      advanced:
        holiday:
          enabled: true
          proximity: true
          country: DE
        interactions: []
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      hidden_size: 166
      num_layers: 1
      bias: false
      dropout: 0.4468172060448423
      learning_rate: 5.118992162819680e-05
      epochs: 85
      batch_size: 61
      seq_length: 168
      weight_decay: 0.0009460491371350899
      optimizer: adam
      gradient_clipping:
        enabled: false
        norm_type:               # optional, default=2.0 (L2-Norm)
        clip_norm:
    forecast_approach: iterative
    forecast_horizon: 1



  v1.2.3:
    start_date: '2022-01-01 00:00:00'
    train_size: 0.9                   # Anteil der Daten fürs Training
    test_size: 0.1                     # Anteil für Test
    eval_set:                      # Gibt an, ob ein Validierungsset im traing der Hauptmodelle verwendet werden soll. 
      use: False
      size: 0.1
    early_stopping:               # only possible with eval !!!!
      rounds: 5
    # Imputationsmethode (exemplarisch)
    imputation_method:
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward

    # Trainingsmodus: simple_split oder rolling_cv
    training_mode: simple_split

    # CV-Einstellungen (falls rolling_cv genutzt wird)
    cv_settings:
      window_type: expanding
      test_window: 1W
      optuna_folds: 1

    optuna:
      use_optuna: False         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 10
      n_splits: 2
      direction: minimize
      metric: pinball_loss
      quantile: 0.5

    feature_selection:
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize
        time:
          enabled: false
          method: standardize
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [24, 168]
      time_features:
        - hour
        - weekday
        - is_weekend
        - month
      fourier_terms: true
      exogenous:
        base_features:
          - temperature_2m
          - rain
          - cloud_cover
          - wind_speed_10m
          - sunshine_duration


        transformations:
          rolling:
            windows: [24]
            stats: [mean]
            features: [temperature_2m]
          diff:
            windows: [24]
            features: [surface_pressure]
      advanced:
        holiday:
          enabled: true
          proximity: true
          country: DE
        interactions: []
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      hidden_size: 166
      num_layers: 3
      bias: false
      dropout: 0.3468172060448423
      learning_rate: 5.118992162819680e-04
      epochs: 85
      batch_size: 61
      seq_length: 7
      weight_decay: 0.0009460491371350899
      optimizer: AdamW
      gradient_clipping:
        enabled: True
        norm_type:  2.0            # optional, default=2.0 (L2-Norm)
        clip_norm: 1.3
    forecast_approach: iterative
    forecast_horizon: 1



  v1.2.4:
    start_date: '2022-01-01 00:00:00'
    train_size: 0.9                   # Anteil der Daten fürs Training
    test_size: 0.1                     # Anteil für Test
    eval_set:                      # Gibt an, ob ein Validierungsset im traing der Hauptmodelle verwendet werden soll. 
      use: True
      size: 0.1
    early_stopping:               # only possible with eval !!!!
      rounds: 57
    # Imputationsmethode (exemplarisch)
    imputation_method:
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward

    # Trainingsmodus: simple_split oder rolling_cv
    training_mode: simple_split

    # CV-Einstellungen (falls rolling_cv genutzt wird)
    cv_settings:
      window_type: expanding
      test_window: 1W
      optuna_folds: 1

    optuna:
      use_optuna: False         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 10
      n_splits: 2
      direction: minimize
      metric: pinball_loss
      quantile: 0.5

    feature_selection:
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize
        time:
          enabled: false
          method: standardize
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [168, 336]
      time_features:
        - hour
        - weekday
        - is_weekend
        - summer_winter_time
      fourier_terms: true
      exogenous:
        base_features:
          - temperature_2m
          - rain
          - surface_pressure
          - cloud_cover
          - wind_speed_10m
          - sunshine_duration
          - pm10
          - pm2_5
          - carbon_monoxide
          - sulphur_dioxide
          - ozone
          - dust
          - ammonia
          - relative_humidity_2m
          - dew_point_2m
          - apparent_temperature
          - precipitation
          - pressure_msl
          - cloud_cover_low
          - et0_fao_evapotranspiration
          - vapour_pressure_deficit
          - wind_speed_100m
          - wind_direction_10m
          - wind_direction_100m
          - wet_bulb_temperature_2m
          - direct_normal_irradiance

        transformations:
          rolling:
            windows: []
            stats: []
            features: []
          diff:
            windows: [1,2,3,4,5,6, 7, 8, 9, 12, 24]
            features:
             - temperature_2m
             - rain
             - surface_pressure
             - cloud_cover
             - wind_speed_10m
             - sunshine_duration
             - pm10
             - pm2_5
             - carbon_monoxide
             - sulphur_dioxide
             - ozone
             - dust
             - ammonia
             - relative_humidity_2m
             - dew_point_2m
             - apparent_temperature
             - precipitation
             - pressure_msl
             - cloud_cover_low
             - et0_fao_evapotranspiration
             - vapour_pressure_deficit
             - wind_speed_100m
             - wind_direction_10m
             - wind_direction_100m
             - wet_bulb_temperature_2m
             - direct_normal_irradiance
      advanced:
        holiday:
          enabled: true
          proximity: true
          country: DE
        interactions: []
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      hidden_size: 266
      num_layers: 1
      bias: True
      dropout: 0
      learning_rate: 5.118992162819680e-04
      epochs: 250
      batch_size: 30
      seq_length: 48
      weight_decay: 0.0009460491371350899
      optimizer: AdamW
      gradient_clipping:
        enabled: True
        norm_type:  2.0            # optional, default=2.0 (L2-Norm)
        clip_norm: 1.3
    forecast_approach: iterative
    forecast_horizon: 1




  v1.2.5:
    start_date: '2022-01-01 00:00:00'
    train_size: 0.9                   # Anteil der Daten fürs Training
    test_size: 0.1                     # Anteil für Test
    eval_set:                      # Gibt an, ob ein Validierungsset im traing der Hauptmodelle verwendet werden soll. 
      use: True
      size: 0.1
    early_stopping:               # only possible with eval !!!!
      rounds: 7
    # Imputationsmethode (exemplarisch)
    imputation_method:
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward

    # Trainingsmodus: simple_split oder rolling_cv
    training_mode: simple_split

    # CV-Einstellungen (falls rolling_cv genutzt wird)
    cv_settings:
      window_type: expanding
      test_window: 1W
      optuna_folds: 1

    optuna:
      use_optuna: False         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 10
      n_splits: 2
      direction: minimize
      metric: pinball_loss
      quantile: 0.5

    feature_selection:
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize
        time:
          enabled: false
          method: standardize
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [168, 336]
      time_features:
        - hour
        - weekday
        - is_weekend
        - summer_winter_time
      fourier_terms: true
      exogenous:
        base_features:
          - temperature_2m
          - rain
          - surface_pressure
          - cloud_cover
          - wind_speed_10m
          - sunshine_duration
          - pm10
          - pm2_5
          - carbon_monoxide
          - sulphur_dioxide
          - ozone
          - dust
          - ammonia
          - relative_humidity_2m
          - dew_point_2m
          - apparent_temperature
          - precipitation
          - pressure_msl
          - cloud_cover_low
          - et0_fao_evapotranspiration
          - vapour_pressure_deficit
          - wind_speed_100m
          - wind_direction_10m
          - wind_direction_100m
          - wet_bulb_temperature_2m
          - direct_normal_irradiance

        transformations:
          rolling:
            windows: []
            stats: []
            features: []
          diff:
            windows: [1,2,3,4,5,6, 7, 8, 9, 12, 24]
            features:
             - temperature_2m
             - rain
             - surface_pressure
             - cloud_cover
             - wind_speed_10m
             - sunshine_duration
             - pm10
             - pm2_5
             - carbon_monoxide
             - sulphur_dioxide
             - ozone
             - dust
             - ammonia
             - relative_humidity_2m
             - dew_point_2m
             - apparent_temperature
             - precipitation
             - pressure_msl
             - cloud_cover_low
             - et0_fao_evapotranspiration
             - vapour_pressure_deficit
             - wind_speed_100m
             - wind_direction_10m
             - wind_direction_100m
             - wet_bulb_temperature_2m
             - direct_normal_irradiance
      advanced:
        holiday:
          enabled: true
          proximity: true
          country: DE
        interactions: []
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      hidden_size: 200
      num_layers: 1
      bias: False
      dropout: 0
      learning_rate: 5.118992162819680e-04
      epochs: 250
      batch_size: 336
      seq_length: 336
      weight_decay: 0.0009460491371350899
      optimizer: AdamW
      gradient_clipping:
        enabled: True
        norm_type:  2.0            # optional, default=2.0 (L2-Norm)
        clip_norm: 1.3
    forecast_approach: iterative
    forecast_horizon: 1





  v1.2.6:
    start_date: '2022-01-01 00:00:00'
    train_size: 0.9                   # Anteil der Daten fürs Training
    test_size: 0.1                     # Anteil für Test
    eval_set:                      # Gibt an, ob ein Validierungsset im traing der Hauptmodelle verwendet werden soll. 
      use: True
      size: 0.1
    early_stopping:               # only possible with eval !!!!
      rounds: 7
    # Imputationsmethode (exemplarisch)
    imputation_method:
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward

    # Trainingsmodus: simple_split oder rolling_cv
    training_mode: simple_split

    # CV-Einstellungen (falls rolling_cv genutzt wird)
    cv_settings:
      window_type: expanding
      test_window: 1W
      optuna_folds: 1

    optuna:
      use_optuna: False         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 10
      n_splits: 2
      direction: minimize
      metric: pinball_loss
      quantile: 0.5

    feature_selection:
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize
        time:
          enabled: false
          method: standardize
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [168, 336]
      time_features:
        - hour
        - weekday
        - is_weekend
        - summer_winter_time
      fourier_terms: true
      exogenous:
        base_features:
          - temperature_2m
          - rain
          - surface_pressure
          - cloud_cover
          - wind_speed_10m
          - sunshine_duration
          - pm10
          - pm2_5
          - carbon_monoxide
          - sulphur_dioxide
          - ozone
          - dust
          - ammonia
          - relative_humidity_2m
          - dew_point_2m
          - apparent_temperature
          - precipitation
          - pressure_msl
          - cloud_cover_low
          - et0_fao_evapotranspiration
          - vapour_pressure_deficit
          - wind_speed_100m
          - wind_direction_10m
          - wind_direction_100m
          - wet_bulb_temperature_2m
          - direct_normal_irradiance

        transformations:
          rolling:
            windows: []
            stats: []
            features: []
          diff:
            windows: [1,2,3,4,5,6, 7, 8, 9, 12, 24]
            features:
             - temperature_2m
             - rain
             - surface_pressure
             - cloud_cover
             - wind_speed_10m
             - sunshine_duration
             - pm10
             - pm2_5
             - carbon_monoxide
             - sulphur_dioxide
             - ozone
             - dust
             - ammonia
             - relative_humidity_2m
             - dew_point_2m
             - apparent_temperature
             - precipitation
             - pressure_msl
             - cloud_cover_low
             - et0_fao_evapotranspiration
             - vapour_pressure_deficit
             - wind_speed_100m
             - wind_direction_10m
             - wind_direction_100m
             - wet_bulb_temperature_2m
             - direct_normal_irradiance
      advanced:
        holiday:
          enabled: true
          proximity: true
          country: DE
        interactions: []
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      hidden_size: 200
      num_layers: 1
      bias: False
      dropout: 0
      learning_rate: 5.118992162819680e-04
      epochs: 250
      batch_size: 336
      seq_length: 6
      weight_decay: 0.0009460491371350899
      optimizer: AdamW
      gradient_clipping:
        enabled: True
        norm_type:  2.0            # optional, default=2.0 (L2-Norm)
        clip_norm: 1.3
    forecast_approach: iterative
    forecast_horizon: 1



  v1.2.7:
    start_date: '2022-01-01 00:00:00'
    train_size: 0.9                   # Anteil der Daten fürs Training
    test_size: 0.1                     # Anteil für Test
    eval_set:                      # Gibt an, ob ein Validierungsset im traing der Hauptmodelle verwendet werden soll. 
      use: True
      size: 0.1
    early_stopping:               # only possible with eval !!!!
      rounds: 7
    # Imputationsmethode (exemplarisch)
    imputation_method:
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward

    # Trainingsmodus: simple_split oder rolling_cv
    training_mode: simple_split

    # CV-Einstellungen (falls rolling_cv genutzt wird)
    cv_settings:
      window_type: expanding
      test_window: 1W
      optuna_folds: 1

    optuna:
      use_optuna: False         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 10
      n_splits: 2
      direction: minimize
      metric: pinball_loss
      quantile: 0.5

    feature_selection:
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize
        time:
          enabled: false
          method: standardize
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [24, 168, 336]
      time_features:
        - hour
        - weekday
        - is_weekend
        - summer_winter_time
      fourier_terms: true
      exogenous:
        base_features:
          - temperature_2m
          - rain
          - surface_pressure
          - cloud_cover
          - wind_speed_10m
          - sunshine_duration
          - pm10
          - pm2_5
          - carbon_monoxide
          - relative_humidity_2m
          - dew_point_2m
          - apparent_temperature
          - precipitation
          - pressure_msl
          - cloud_cover_low
          - et0_fao_evapotranspiration
          - vapour_pressure_deficit
          - wind_speed_100m
          - wind_direction_10m
          - wind_direction_100m
          - wet_bulb_temperature_2m

        transformations:
          rolling:
            windows: []
            stats: []
            features: []
          diff:
            windows: [1, 7, 8, 9, 12, 24]
            features:
             - temperature_2m
             - rain
             - surface_pressure
             - cloud_cover
             - wind_speed_10m
             - sunshine_duration
             - pm10
             - pm2_5
             - carbon_monoxide
             - relative_humidity_2m
             - dew_point_2m
             - apparent_temperature
             - precipitation
             - pressure_msl
             - cloud_cover_low
             - et0_fao_evapotranspiration
             - vapour_pressure_deficit
             - wind_speed_100m
             - wet_bulb_temperature_2m
      advanced:
        holiday:
          enabled: true
          proximity: true
          country: DE
        interactions: []
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      hidden_size: 64
      num_layers: 2
      bias: True
      dropout: 0
      learning_rate: 0.18
      epochs: 50
      batch_size: 48
      seq_length: 48
      weight_decay: 0
      optimizer: Adadelta
      gradient_clipping:
        enabled: True
        norm_type:  2.0            # optional, default=2.0 (L2-Norm)
        clip_norm: 1.3
    forecast_approach: iterative
    forecast_horizon: 1






  v1.2.8:
    start_date: '2022-01-01 00:00:00'
    train_size: 0.9                   # Anteil der Daten fürs Training
    test_size: 0.1                     # Anteil für Test
    eval_set:                      # Gibt an, ob ein Validierungsset im traing der Hauptmodelle verwendet werden soll. 
      use: True
      size: 0.1
    early_stopping:               # only possible with eval !!!!
      rounds: 3
    # Imputationsmethode (exemplarisch)
    imputation_method:
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward

    # Trainingsmodus: simple_split oder rolling_cv
    training_mode: simple_split

    # CV-Einstellungen (falls rolling_cv genutzt wird)
    cv_settings:
      window_type: expanding
      test_window: 1W
      optuna_folds: 1

    optuna:
      use_optuna: False         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 10
      n_splits: 2
      direction: minimize
      metric: pinball_loss
      quantile: 0.5

    feature_selection:
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize
        time:
          enabled: false
          method: standardize
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [24, 168]
      time_features:
        - hour
        - weekday
        - is_weekend
        - month
        - summer_winter_time
      fourier_terms: true
      exogenous:
        base_features:
          - temperature_2m
          - rain
          - surface_pressure
          - cloud_cover
          - wind_speed_10m
          - wind_speed_100m
          - sunshine_duration
          - direct_radiation
          - dew_point_2m
          - apparent_temperature
          - sulphur_dioxide

        transformations:
          rolling:
            windows: [24, 168]
            stats: [mean, std]
            features: [temperature_2m, wind_speed_10m]
          diff:
            windows: [24, 168]
            features: [surface_pressure, temperature_2m]
      advanced:
        holiday:
          enabled: true
          proximity: true
          country: DE
        interactions:
          - [temperature_2m, rain]
          - [sunshine_duration, wind_speed_10m]
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      hidden_size: 120
      num_layers: 1
      bias: False
      dropout: 0
      learning_rate: 0.18
      epochs: 220
      batch_size: 120
      seq_length: 24
      weight_decay: 0
      optimizer: Adadelta
      gradient_clipping:
        enabled: False
        norm_type:  2.0            # optional, default=2.0 (L2-Norm)
        clip_norm: 1.3
    forecast_approach: iterative
    forecast_horizon: 1




  v1.2.9:
    start_date: '2022-01-01 00:00:00'
    train_size: 0.9                   # Anteil der Daten fürs Training
    test_size: 0.1                     # Anteil für Test
    eval_set:                      # Gibt an, ob ein Validierungsset im traing der Hauptmodelle verwendet werden soll. 
      use: true
      size: 0.1
    early_stopping:               # only possible with eval !!!!
      rounds: 4
    # Imputationsmethode (exemplarisch)
    imputation_method:
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward

    # Trainingsmodus: simple_split oder rolling_cv
    training_mode: rolling_cv

    # CV-Einstellungen (falls rolling_cv genutzt wird)
    cv_settings:
      window_type: expanding
      test_window: 1W
      optuna_folds: 1

    optuna:
      use_optuna: False         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 25
      n_splits: 2
      direction: minimize
      metric: pinball_loss
      quantile: 0.5

    feature_selection:
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize
        time:
          enabled: false
          method: standardize
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [24, 168]
      time_features:
        - hour
        - weekday
        - is_weekend
        - month
        - summer_winter_time
      fourier_terms: false
      exogenous:
        base_features:
          - temperature_2m
          - rain
          # - surface_pressure
          - cloud_cover
          - wind_speed_10m
          - wind_speed_100m
          - sunshine_duration
          # - direct_radiation

        transformations:
          rolling:
            windows: []
            stats: []
            features: []
          diff:
            windows: []
            features: []
      advanced:
        holiday:
          enabled: true
          proximity: true
          country: DE
        interactions: []
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      hidden_size: 228
      num_layers: 2
      bias: false
      dropout: 0.27433780679411666
      learning_rate: 0.14991889813027978
      epochs: 81
      batch_size: 118
      seq_length: 24
      weight_decay: 0.000473402854186186
      optimizer: Adadelta
      gradient_clipping:
        enabled: false
        norm_type:               # optional, default=2.0 (L2-Norm)
        clip_norm:
    forecast_approach: iterative
    forecast_horizon: 1


