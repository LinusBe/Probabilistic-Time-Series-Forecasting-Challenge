dataset: energy           # Name des Datensatzes, z. B. "energy", "no2" oder "solar".
model: quantile_regression          # Modelltyp; hier wird LightGBM genutzt, kann aber auch "quantile_regression" usw. sein.
quantiles: [0.025, 0.25, 0.5, 0.75, 0.975]  # Liste der zu prognostizierenden Quantile.
optuna_search_space:
  param_space:
    alpha: [0.0, 1.0]


versions:
  v1.0.0:
    # Datenaufbereitung und Splitting
    start_date: '2022-01-01 00:00:00'  # Datum, ab dem die Daten verwendet bzw. gefiltert werden.
    train_size: 0.9                    # Anteil der Daten, die für das Training genutzt werden.
    test_size: 0.1                     # Anteil der Daten, die als Testset verwendet werden.
    imputation_method:                # Imputationsmethode für fehlende Werte in exog. Time knn und spline
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward
    training_mode: simple_split          # Trainingsmodus; oder simple_split
    cv_settings:
      window_type: expanding      # oder "sliding"
      test_window: 1W             # 1 Woche Vorhersage
      optuna_folds: 1         # Anzahl der Folds für Optuna innerhalb der CV
    optuna:
      use_optuna: false         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 15
      n_splits: 2
      direction: minimize         # Ziel: Minimierung des Pinball Loss
      metric: pinball_loss       # Metrik, die optimiert werden soll
      quantile: 0.5            # Standard-Quantil für die Optimierung
    feature_selection:        #if run_selection is set to True, the top_n features will be selected
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize             # 3 options available: standardize, minmax, robust
        time:
          enabled: false
          method: standardize             # 3 options available: standardize, minmax, robust
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [24, 168]
      time_features:
        - hour
        - weekday
        - is_weekend
        - month
      fourier_terms: false
      exogenous:
        base_features: []
        transformations:
          rolling:
            windows: []
            stats: []
            features: []
          diff:
            windows: []
            features: []
      advanced:
        holiday:
          enabled: false
          proximity: false
          country: DE
        interactions: []
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      alpha: 0.5
      solver: highs
      solver_options:
        presolve: false
    forecast_horizon: 72


  v1.0.1:
    # Datenaufbereitung und Splitting
    start_date: '2022-01-01 00:00:00'  # Datum, ab dem die Daten verwendet bzw. gefiltert werden.
    train_size: 0.9                    # Anteil der Daten, die für das Training genutzt werden.
    test_size: 0.1                     # Anteil der Daten, die als Testset verwendet werden.
    imputation_method:                # Imputationsmethode für fehlende Werte in exog. Time knn und spline
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward
    training_mode: rolling_cv          # Trainingsmodus; oder simple_split
    cv_settings:
      window_type: expanding      # oder "sliding"
      test_window: 1W             # 1 Woche Vorhersage
      optuna_folds: 1         # Anzahl der Folds für Optuna innerhalb der CV
    optuna:
      use_optuna: false         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 10
      n_splits: 2
      direction: minimize         # Ziel: Minimierung des Pinball Loss
      metric: pinball_loss       # Metrik, die optimiert werden soll
      quantile: 0.5            # Standard-Quantil für die Optimierung
    feature_selection:        #if run_selection is set to True, the top_n features will be selected
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize             # 3 options available: standardize, minmax, robust
        time:
          enabled: false
          method: standardize             # 3 options available: standardize, minmax, robust
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [24, 168]
      time_features:
        - hour
        - weekday
        - is_weekend
        - month
      fourier_terms: false
      exogenous:
        base_features: []
        transformations:
          rolling:
            windows: []
            stats: []
            features: []
          diff:
            windows: []
            features: []
      advanced:
        holiday:
          enabled: false
          proximity: false
          country: DE
        interactions: []
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      alpha: 0.5
      solver: highs
      solver_options:
        presolve: false
    forecast_horizon: 72



  v1.0.2:
    # Datenaufbereitung und Splitting
    start_date: '2022-01-01 00:00:00'  # Datum, ab dem die Daten verwendet bzw. gefiltert werden.
    train_size: 0.9                    # Anteil der Daten, die für das Training genutzt werden.
    test_size: 0.1                     # Anteil der Daten, die als Testset verwendet werden.
    imputation_method:                # Imputationsmethode für fehlende Werte in exog. Time knn und spline
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward
    training_mode: simple_split          # Trainingsmodus; oder simple_split
    cv_settings:
      window_type: expanding      # oder "sliding"
      test_window: 1W             # 1 Woche Vorhersage
      optuna_folds: 1         # Anzahl der Folds für Optuna innerhalb der CV
    optuna:
      use_optuna: true         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 15
      n_splits: 2
      direction: minimize         # Ziel: Minimierung des Pinball Loss
      metric: pinball_loss       # Metrik, die optimiert werden soll
      quantile: 0.5            # Standard-Quantil für die Optimierung
    feature_selection:        #if run_selection is set to True, the top_n features will be selected
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize             # 3 options available: standardize, minmax, robust
        time:
          enabled: false
          method: standardize             # 3 options available: standardize, minmax, robust
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [24, 168]
      time_features:
        - hour
        - weekday
        - is_weekend
        - month
      fourier_terms: false
      exogenous:
        base_features: []
        transformations:
          rolling:
            windows: []
            stats: []
            features: []
          diff:
            windows: []
            features: []
      advanced:
        holiday:
          enabled: false
          proximity: false
          country: DE
        interactions: []
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      alpha: 0.0037881862705716014
      solver: highs
      solver_options:
        presolve: false
    forecast_horizon: 72




  v1.1.0:
    # Datenaufbereitung und Splitting
    start_date: '2022-01-01 00:00:00'  # Datum, ab dem die Daten verwendet bzw. gefiltert werden.
    train_size: 0.9                    # Anteil der Daten, die für das Training genutzt werden.
    test_size: 0.1                     # Anteil der Daten, die als Testset verwendet werden.
    imputation_method:                # Imputationsmethode für fehlende Werte in exog. Time knn und spline
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward
    training_mode: simple_split          # Trainingsmodus; oder simple_split
    cv_settings:
      window_type: expanding      # oder "sliding"
      test_window: 1W             # 1 Woche Vorhersage
      optuna_folds: 1         # Anzahl der Folds für Optuna innerhalb der CV
    optuna:
      use_optuna: false         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 15
      n_splits: 2
      direction: minimize         # Ziel: Minimierung des Pinball Loss
      metric: pinball_loss       # Metrik, die optimiert werden soll
      quantile: 0.5            # Standard-Quantil für die Optimierung
    feature_selection:        #if run_selection is set to True, the top_n features will be selected
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize             # 3 options available: standardize, minmax, robust
        time:
          enabled: false
          method: standardize             # 3 options available: standardize, minmax, robust
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [24, 168]
      time_features:
        - hour
        - weekday
        - is_weekend
        - month
        - summer_winter_time
      fourier_terms: false
      exogenous:
        base_features:
          - temperature_2m
          - rain
          # - surface_pressure
          - cloud_cover
          - wind_speed_10m
          # - wind_speed_100m
          - sunshine_duration
          # - direct_radiation

        transformations:
          rolling:
            windows: []
            stats: []
            features: []
          diff:
            windows: []
            features: []
      advanced:
        holiday:
          enabled: true
          proximity: true
          country: DE
        interactions: []
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      alpha: 0.0037881862705716014
      solver: highs
      solver_options:
        presolve: false
    forecast_horizon: 72

  v1.1.1:
    # Datenaufbereitung und Splitting
    start_date: '2022-01-01 00:00:00'  # Datum, ab dem die Daten verwendet bzw. gefiltert werden.
    train_size: 0.9                    # Anteil der Daten, die für das Training genutzt werden.
    test_size: 0.1                     # Anteil der Daten, die als Testset verwendet werden.
    imputation_method:                # Imputationsmethode für fehlende Werte in exog. Time knn und spline
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward
    training_mode: rolling_cv          # Trainingsmodus;rolling_cv oder simple_split
    cv_settings:
      window_type: expanding      # oder "sliding"
      test_window: 1W             # 1 Woche Vorhersage
      optuna_folds: 1         # Anzahl der Folds für Optuna innerhalb der CV
    optuna:
      use_optuna: false         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 15
      n_splits: 2
      direction: minimize         # Ziel: Minimierung des Pinball Loss
      metric: pinball_loss       # Metrik, die optimiert werden soll
      quantile: 0.5            # Standard-Quantil für die Optimierung
    feature_selection:        #if run_selection is set to True, the top_n features will be selected
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize             # 3 options available: standardize, minmax, robust
        time:
          enabled: false
          method: standardize             # 3 options available: standardize, minmax, robust
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [24, 168]
      time_features:
        - hour
        - weekday
        - is_weekend
        - month
        - summer_winter_time
      fourier_terms: false
      exogenous:
        base_features:
          - temperature_2m
          - rain
          # - surface_pressure
          - cloud_cover
          - wind_speed_10m
          # - wind_speed_100m
          - sunshine_duration
          # - direct_radiation

        transformations:
          rolling:
            windows: []
            stats: []
            features: []
          diff:
            windows: []
            features: []
      advanced:
        holiday:
          enabled: true
          proximity: true
          country: DE
        interactions: []
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      alpha: 0.0037881862705716014
      solver: highs
      solver_options:
        presolve: false


  v1.1.2:
    # Datenaufbereitung und Splitting
    start_date: '2022-01-01 00:00:00'  # Datum, ab dem die Daten verwendet bzw. gefiltert werden.
    train_size: 0.9                    # Anteil der Daten, die für das Training genutzt werden.
    test_size: 0.1                     # Anteil der Daten, die als Testset verwendet werden.
    imputation_method:                # Imputationsmethode für fehlende Werte in exog. Time knn und spline
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward
    training_mode: rolling_cv          # Trainingsmodus;rolling_cv oder simple_split
    cv_settings:
      window_type: expanding      # oder "sliding"
      test_window: 1W             # 1 Woche Vorhersage
      optuna_folds: 1         # Anzahl der Folds für Optuna innerhalb der CV
    optuna:
      use_optuna: false         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 15
      n_splits: 2
      direction: minimize         # Ziel: Minimierung des Pinball Loss
      metric: pinball_loss       # Metrik, die optimiert werden soll
      quantile: 0.5            # Standard-Quantil für die Optimierung
    feature_selection:        #if run_selection is set to True, the top_n features will be selected
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize             # 3 options available: standardize, minmax, robust
        time:
          enabled: false
          method: standardize             # 3 options available: standardize, minmax, robust
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [24, 168]
      time_features:
        - hour
        - weekday
        - is_weekend
        - month
        - summer_winter_time
      fourier_terms: false
      exogenous:
        base_features:
          - temperature_2m
          - rain
          - surface_pressure
          - cloud_cover
          - wind_speed_10m
          # - wind_speed_100m
          - sunshine_duration
          - direct_radiation
          - dew_point_2m
          - apparent_temperature
          - sulphur_dioxide

        transformations:
          rolling:
            windows: []
            stats: []
            features: []
          diff:
            windows: []
            features: []
      advanced:
        holiday:
          enabled: true
          proximity: true
          country: DE
        interactions: []
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      alpha: 0.0037881862705716014
      solver: highs
      solver_options:
        presolve: false


  v1.1.3:
    # Datenaufbereitung und Splitting
    start_date: '2022-01-01 00:00:00'  # Datum, ab dem die Daten verwendet bzw. gefiltert werden.
    train_size: 0.9                    # Anteil der Daten, die für das Training genutzt werden.
    test_size: 0.1                     # Anteil der Daten, die als Testset verwendet werden.
    imputation_method:                # Imputationsmethode für fehlende Werte in exog. Time knn und spline
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward
    training_mode: simple_split          # Trainingsmodus;rolling_cv oder simple_split
    cv_settings:
      window_type: expanding      # oder "sliding"
      test_window: 1W             # 1 Woche Vorhersage
      optuna_folds: 1         # Anzahl der Folds für Optuna innerhalb der CV
    optuna:
      use_optuna: false         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 15
      n_splits: 2
      direction: minimize         # Ziel: Minimierung des Pinball Loss
      metric: pinball_loss       # Metrik, die optimiert werden soll
      quantile: 0.5            # Standard-Quantil für die Optimierung
    feature_selection:        #if run_selection is set to True, the top_n features will be selected
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize             # 3 options available: standardize, minmax, robust
        time:
          enabled: false
          method: standardize             # 3 options available: standardize, minmax, robust
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [24, 168]
      time_features:
        - hour
        - weekday
        - is_weekend
        - month
        - summer_winter_time
      fourier_terms: true
      exogenous:
        base_features:
          - temperature_2m
          - rain
          - surface_pressure
          - cloud_cover
          - wind_speed_10m
          - wind_speed_100m
          - sunshine_duration
          - direct_radiation
          - dew_point_2m
          - apparent_temperature
          - sulphur_dioxide

        transformations:
          rolling:
            windows: [24, 168]
            stats: [mean, std]
            features: [temperature_2m, wind_speed_10m]
          diff:
            windows: []
            features: []
      advanced:
        holiday:
          enabled: true
          proximity: true
          country: DE
        interactions:
          - [temperature_2m, rain]
          - [sunshine_duration, wind_speed_10m]
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      alpha: 0.0037881862705716014
      solver: highs
      solver_options:
        presolve: false


  v1.1.4:
    # Datenaufbereitung und Splitting
    start_date: '2022-01-01 00:00:00'  # Datum, ab dem die Daten verwendet bzw. gefiltert werden.
    train_size: 0.9                    # Anteil der Daten, die für das Training genutzt werden.
    test_size: 0.1                     # Anteil der Daten, die als Testset verwendet werden.
    imputation_method:                # Imputationsmethode für fehlende Werte in exog. Time knn und spline
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward
    training_mode: simple_split          # Trainingsmodus;rolling_cv oder simple_split
    cv_settings:
      window_type: expanding      # oder "sliding"
      test_window: 1W             # 1 Woche Vorhersage
      optuna_folds: 1         # Anzahl der Folds für Optuna innerhalb der CV
    optuna:
      use_optuna: true         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 15
      n_splits: 2
      direction: minimize         # Ziel: Minimierung des Pinball Loss
      metric: pinball_loss       # Metrik, die optimiert werden soll
      quantile: 0.5            # Standard-Quantil für die Optimierung
    feature_selection:        #if run_selection is set to True, the top_n features will be selected
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize             # 3 options available: standardize, minmax, robust
        time:
          enabled: false
          method: standardize             # 3 options available: standardize, minmax, robust
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [24, 168]
      time_features:
        - hour
        - weekday
        - is_weekend
        - month
        - summer_winter_time
      fourier_terms: true
      exogenous:
        base_features:
          - temperature_2m
          - rain
          - surface_pressure
          - cloud_cover
          - wind_speed_10m
          - wind_speed_100m
          - sunshine_duration
          - direct_radiation
          - dew_point_2m
          - apparent_temperature
          - sulphur_dioxide

        transformations:
          rolling:
            windows: [24, 168]
            stats: [mean, std]
            features: [temperature_2m, wind_speed_10m]
          diff:
            windows: []
            features: []
      advanced:
        holiday:
          enabled: true
          proximity: true
          country: DE
        interactions:
          - [temperature_2m, rain]
          - [sunshine_duration, wind_speed_10m]
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      alpha: 0.00966404639802032
      solver: highs
      solver_options:
        presolve: false






  v1.1.5:
    # Datenaufbereitung und Splitting
    start_date: '2022-01-01 00:00:00'  # Datum, ab dem die Daten verwendet bzw. gefiltert werden.
    train_size: 0.9                    # Anteil der Daten, die für das Training genutzt werden.
    test_size: 0.1                     # Anteil der Daten, die als Testset verwendet werden.
    imputation_method:                # Imputationsmethode für fehlende Werte in exog. Time knn und spline
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward
    training_mode: rolling_cv          # Trainingsmodus;rolling_cv oder simple_split
    cv_settings:
      window_type: expanding      # oder "sliding"
      test_window: 1W             # 1 Woche Vorhersage
      optuna_folds: 1         # Anzahl der Folds für Optuna innerhalb der CV
    optuna:
      use_optuna: true         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 15
      n_splits: 2
      direction: minimize         # Ziel: Minimierung des Pinball Loss
      metric: pinball_loss       # Metrik, die optimiert werden soll
      quantile: 0.5            # Standard-Quantil für die Optimierung
    feature_selection:        #if run_selection is set to True, the top_n features will be selected
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize             # 3 options available: standardize, minmax, robust
        time:
          enabled: false
          method: standardize             # 3 options available: standardize, minmax, robust
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [24, 168]
      time_features:
        - hour
        - weekday
        - is_weekend
        - month
        - summer_winter_time
      fourier_terms: true
      exogenous:
        base_features:
          - temperature_2m
          - rain
          - surface_pressure
          - cloud_cover
          - wind_speed_10m
          - wind_speed_100m
          - sunshine_duration
          - direct_radiation
          - dew_point_2m
          - apparent_temperature
          - sulphur_dioxide

        transformations:
          rolling:
            windows: [24, 168]
            stats: [mean, std]
            features: [temperature_2m, wind_speed_10m]
          diff:
            windows: []
            features: []
      advanced:
        holiday:
          enabled: true
          proximity: true
          country: DE
        interactions:
          - [temperature_2m, rain]
          - [sunshine_duration, wind_speed_10m]
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      alpha: 0.003570858947895564
      solver: highs
      solver_options:
        presolve: false




  v1.2.0:
    # Datenaufbereitung und Splitting
    start_date: '2022-01-01 00:00:00'  # Datum, ab dem die Daten verwendet bzw. gefiltert werden.
    train_size: 0.9                    # Anteil der Daten, die für das Training genutzt werden.
    test_size: 0.1                     # Anteil der Daten, die als Testset verwendet werden.
    imputation_method:                # Imputationsmethode für fehlende Werte in exog. Time knn und spline
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward
    training_mode: simple_split          # Trainingsmodus;rolling_cv oder simple_split
    cv_settings:
      window_type: expanding      # oder "sliding"
      test_window: 1W             # 1 Woche Vorhersage
      optuna_folds: 1         # Anzahl der Folds für Optuna innerhalb der CV
    optuna:
      use_optuna: true         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 15
      n_splits: 2
      direction: minimize         # Ziel: Minimierung des Pinball Loss
      metric: pinball_loss       # Metrik, die optimiert werden soll
      quantile: 0.5            # Standard-Quantil für die Optimierung
    feature_selection:        #if run_selection is set to True, the top_n features will be selected
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize             # 3 options available: standardize, minmax, robust
        time:
          enabled: false
          method: standardize             # 3 options available: standardize, minmax, robust
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [24, 48, 72, 120, 168]
      time_features:
        - weekday
      fourier_terms: false
      exogenous:
        # !! WICHTIG: Liste hier ALLE Roh-Features auf, die für Transformationen benötigt werden !!
        base_features: []

        transformations:
          rolling:
            windows: [168]
            stats: [std]
            features: [relative_humidity_2m]
          diff:
            windows: [24, 168]
            features: [wind_speed_10m, apparent_temperature, surface_pressure]
      advanced:
        holiday:
          enabled: true
          proximity: true
          country: DE
        interactions: []             # Leer gelassen, da keine spezifischen Interaktionen angefordert wurden
        rolling_moments:
          windows: []
          moments: []
          features: []
      alpha: 0.0037881862705716014
      solver: highs
      solver_options:
        presolve: false

      
  v1.2.1:
    # Datenaufbereitung und Splitting
    start_date: '2022-01-01 00:00:00'  # Datum, ab dem die Daten verwendet bzw. gefiltert werden.
    train_size: 0.9                    # Anteil der Daten, die für das Training genutzt werden.
    test_size: 0.1                     # Anteil der Daten, die als Testset verwendet werden.
    imputation_method:                # Imputationsmethode für fehlende Werte in exog. Time knn und spline
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward
    training_mode: simple_split          # Trainingsmodus;rolling_cv oder simple_split
    cv_settings:
      window_type: expanding      # oder "sliding"
      test_window: 1W             # 1 Woche Vorhersage
      optuna_folds: 1         # Anzahl der Folds für Optuna innerhalb der CV
    optuna:
      use_optuna: true         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 15
      n_splits: 2
      direction: minimize         # Ziel: Minimierung des Pinball Loss
      metric: pinball_loss       # Metrik, die optimiert werden soll
      quantile: 0.5            # Standard-Quantil für die Optimierung
    feature_selection:        #if run_selection is set to True, the top_n features will be selected
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize             # 3 options available: standardize, minmax, robust
        time:
          enabled: false
          method: standardize             # 3 options available: standardize, minmax, robust
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [24, 48, 72, 96, 120, 148, 168]
      time_features:
        - hour
        - weekday
        - is_weekend
      fourier_terms: true
      exogenous:
        base_features: []
        transformations:
          rolling:
            windows: [24, 168]
            stats: [std, max]
            features: [relative_humidity_2m, wind_speed_10m]
          diff:
            windows: [12, 24, 168]
            features: [wind_speed_10m, apparent_temperature, surface_pressure, relative_humidity_2m,
              temperature_2m]
      advanced:
        holiday:
          enabled: true
          proximity: true
          country: DE
        interactions: []             # Leer gelassen, da keine spezifischen Interaktionen angefordert wurden
        rolling_moments:
          windows: []
          moments: []
          features: []
      alpha: 0.0037881862705716014
      solver: highs
      solver_options:
        presolve: false




    params:
      alpha: 0.0008560571670457959
  v1.2.2:
    # Datenaufbereitung und Splitting
    start_date: '2022-01-01 00:00:00'  # Datum, ab dem die Daten verwendet bzw. gefiltert werden.
    train_size: 0.9                    # Anteil der Daten, die für das Training genutzt werden.
    test_size: 0.1                     # Anteil der Daten, die als Testset verwendet werden.
    imputation_method:                # Imputationsmethode für fehlende Werte in exog. Time knn und spline
      use: time
      time_cfg:
        method: time
        limit_direction: forward
      knn_cfg:
        method: knn
        n_neighbors: 5
        weights: uniform
        metric: nan_euclidean
      spline_cfg:
        method: spline
        order: 3
        limit_direction: forward
    training_mode: simple_split          # Trainingsmodus;rolling_cv oder simple_split
    cv_settings:
      window_type: expanding      # oder "sliding"
      test_window: 1W             # 1 Woche Vorhersage
      optuna_folds: 1         # Anzahl der Folds für Optuna innerhalb der CV
    optuna:
      use_optuna: true         # Gibt an, ob Hyperparameter-Tuning mit Optuna durchgeführt werden soll.
      n_trials: 15
      n_splits: 2
      direction: minimize         # Ziel: Minimierung des Pinball Loss
      metric: pinball_loss       # Metrik, die optimiert werden soll
      quantile: 0.5            # Standard-Quantil für die Optimierung
    feature_selection:        #if run_selection is set to True, the top_n features will be selected
      top_n: 10
      run_selection: false
    # Feature-Einstellungen
    features:
      normalization:
        base_features:
          enabled: false
          method: standardize             # 3 options available: standardize, minmax, robust
        time:
          enabled: false
          method: standardize             # 3 options available: standardize, minmax, robust
        lag:
          enabled: false
          method: standardize
        exog:
          enabled: false
          method: standardize
        advanced:
          enabled: false
          method: standardize
      target:
        lags: [24, 168]
      time_features:
        - hour
        - weekday
        - is_weekend
        - month
      fourier_terms: true
      exogenous:
        base_features:
          - temperature_2m
          - rain
          - surface_pressure
          - cloud_cover
          - wind_speed_10m
          - sunshine_duration
          - apparent_temperature


        transformations:
          rolling:
            windows: [24]
            stats: [mean]
            features: [temperature_2m, wind_speed_10m]
          diff:
            windows: []
            features: []
      advanced:
        holiday:
          enabled: true
          proximity: true
          country: DE
        interactions: []
        rolling_moments:
          windows: []
          moments: []
          features: []
    params:
      alpha: 0.006731951902757698
      solver: highs
      solver_options:
        presolve: false
